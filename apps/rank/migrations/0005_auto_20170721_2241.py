# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-21 20:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rank', '0004_rankentity_active'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('internal_last_modified_datetime', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('author', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('internal_last_modified_datetime', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('state', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('internal_last_modified_datetime', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('genre', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='rankentity',
            old_name='creation_datetime',
            new_name='internal_creation_datetime',
        ),
        migrations.RenameField(
            model_name='rankentity',
            old_name='last_modified_datetime',
            new_name='internal_last_modified_datetime',
        ),
        migrations.RenameField(
            model_name='rankparent',
            old_name='creation_datetime',
            new_name='internal_creation_datetime',
        ),
        migrations.RenameField(
            model_name='rankparent',
            old_name='last_modified_datetime',
            new_name='internal_last_modified_datetime',
        ),
        migrations.AddField(
            model_name='rankentity',
            name='created',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='rankentity',
            name='documentation_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='rankentity',
            name='last_update',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='rankentity',
            name='license_type',
            field=models.CharField(default='', max_length=200),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='rankentity',
            name='source_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='rankentity',
            name='website',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='rankentity',
            name='authors',
            field=models.ManyToManyField(blank=True, to='rank.Author'),
        ),
        migrations.AddField(
            model_name='rankentity',
            name='game_state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rank.GameState'),
        ),
        migrations.AddField(
            model_name='rankentity',
            name='genre',
            field=models.ManyToManyField(blank=True, to='rank.Genre'),
        ),
    ]
